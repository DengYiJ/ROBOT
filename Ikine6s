function theta = Ikine6s2(T)
% 定义机械臂臂长
L1 = 491;
L2 = 450;
L3 = 450;
L4 = 84;

% 初始位置
g0 = [-1 0 0 0;
      0 -1 0 0;
      0 0 1 L1+L2+L3+L4;
      0 0 0 1];

% e为指数积
e = T*g0^(-1);

% 定义各角度，数量为8对应8组解，以下矩阵同理
th1 = zeros(8,1);
th2 = zeros(8,1);
th3 = zeros(8,1);
th4 = zeros(8,1);
th5 = zeros(8,1);
th6 = zeros(8,1);

% 各关节指数积形式的矩阵
e1 = zeros(4,4,8);
e2 = zeros(4,4,8);
e3 = zeros(4,4,8);
e4 = zeros(4,4,8);
e5 = zeros(4,4,8);
e6 = zeros(4,4,8);

% 5号关节的点是4、5、6号关节轴的交点，所以在e1*e2*e3*e4*e5*e6=e中，
% 两边右乘p5，就得e1*e2*(e3*p5)=e*p5，
% p5=[0; 0; L1+L2+L3; 1]，如果知道了e3，上式就构成子问题2
% 下式即为e3*p5
e3p5 = zeros(4,8);

% 计算出e1、e2、e3后，用它们的逆使式子变为e4*e5*e6=(e1*e2*e3)^(-1)*e，
% 应用关节6的点p6，即机械臂末端点[0; 0; L1+L2+L3+L4; 1]，就得
% e4*e5*p6=(e1*e2*e3)^(-1)*e*p6，这又构成子问题2
% 下式即为(e1*e2*e3)^(-1)*e*p6
e456p6 = zeros(4,8);

% 同理下式为e*p6
e6p = zeros(4,8);

% 第一次应用子问题2用到的向量和变量
u1 = zeros(4,8);
b1 = zeros(8,1);
y1 = zeros(8,1);
z1 = zeros(4,8);

% 第二次应用子问题2用到的向量和变量
v2 = zeros(4,8);
a2 = zeros(8,1);
y2 = zeros(8,1);
z2 = zeros(4,8);

% 为了使用cross函数计算叉乘，需要用临时向量把原本四维的向量降成三维
% 即去除向量末尾的1
temp1 = zeros(3,8);
temp2 = zeros(3,8);
temp3 = zeros(3,8);
temp4 = zeros(3,8);
temp5 = zeros(3,8);
temp6 = zeros(3,8);
temp7 = zeros(3,8);

% 以下是不随解的变化而变化的量，故不需要用矩阵来定义；
delt2 = norm(e*[0;0;L1+L2+L3;1]-[0;0;L1;1])^2-1;
deltp2 = delt2-norm([0 1 0]*[0;0;L2+L3])^2;
ep5 = e*[0;0;L1+L2+L3;1];
u2 = [0;0;L4;0];
b2 = [0 1 0 0]*u2;

% 8次循环解出8个解
for i=1:1:8

% 应用子问题3求出th3
v1 = ep5 - [0;0;L1;1];
a1 = [0 0 1 0]*v1;
% 以下式子中(-1)^(i)为第一次多解
% 子问题3的计算公式中arccos前的系数可以取正或负
% 这样写可以使得1,3,5,7解取负，剩下的取正
th3(i) = pi+((-1)^(i))*acos((L3^2+L2^2-deltp2)/(2*L2*L3));

e3(:,:,i) = [cos(th3(i)) 0 sin(th3(i)) -(L1+L2)*sin(th3(i));
      0 1 0 0;
      -sin(th3(i)) 0 cos(th3(i)) (L1+L2)-(L1+L2)*cos(th3(i));
      0 0 0 1];
e3p5(:,i) = e3(:,:,i)*[0;0;L1+L2+L3;1];

% 计算出th3以后就可以用子问题2求th1和th2
u1(:,i) = e3p5(:,i) - [0;0;L1;1];
b1(i) = [0 1 0 1]*u1(:,i);
% 第二次多解是第一次应用子问题2的时候，对γ1开方造成的
% γ1开方的结果可以是正也可以是负
% 采用(-1)^ceil(i/2)可以使得1,2,5,6解为负，剩下为正
y1(i) = ((-1)^ceil(i/2))*sqrt(norm(u1(:,i))^2-1-a1^2-b1(i)^2);
z1(:,i) = [-y1(i);b1(i);a1;0];
temp1(:,i) = u1(1:3,i);
temp2(:,i) = z1(1:3,i);
th2(i) = atan([0 1 0 ]*cross(temp1(:,i),temp2(:,i))/(temp1(:,i)'*temp2(:,i)));
v1(3) = 0;
temp3(:,i) = v1(1:3);
z1(3,i) = 0;
if (((-1)^ceil(i/2))==-1)
th1(i) = -atan([0 0 1]*cross(temp3(:,i),temp2(:,i))/(temp3(:,i)'*temp2(:,i)));
end
if (((-1)^ceil(i/2))==1)
th1(i) = pi-atan([0 0 1]*cross(temp3(:,i),temp2(:,i))/(temp3(:,i)'*temp2(:,i)));
end
%th1(i) = -atan([0 0 1]*cross(temp3(:,i),temp2(:,i))/(temp3(:,i)'*temp2(:,i)));

e1(:,:,i) = [cos(th1(i)) -sin(th1(i)) 0 0;
      sin(th1(i)) cos(th1(i)) 0 0;
      0 0 1 0;
      0 0 0 1];
e2(:,:,i) = [cos(th2(i)) 0 sin(th2(i)) -L1*sin(th2(i));
      0 1 0 0;
      -sin(th2(i)) 0 cos(th2(i)) L1-L1*cos(th2(i));
      0 0 0 1];
e456p6(:,i) = (e1(:,:,i)*e2(:,:,i)*e3(:,:,i))^(-1)*e*[0;0;L1+L2+L3+L4;1];

% 计算出th1、th2、th3以后就可以用子问题2求th4和th5
v2(:,i) = e456p6(:,i) - [0;0;L1+L2+L3;0];
a2(i) = [0 0 1 0]*v2(:,i);
% 第二次多解是第一次应用子问题2的时候，对γ开方造成的
% γ开方的结果可以是正也可以是负
% 采用(-1)^ceil(i/4)可以使得1,2,3,4解为负，剩下为正
y2(i) = ((-1)^ceil(i/4))*sqrt(L4^2-a2(i)^2-b2^2);
z2(:,i) = [-y2(i);b2;a2(i);0];
temp4(:,i) = u2(1:3);
temp5(:,i) = z2(1:3,i);
th5(i) = atan([0 1 0]*cross(temp4(:,i),temp5(:,i))/(temp4(:,i)'*temp5(:,i)));
v2(3,i) = 0;
temp6(:,i) = v2(1:3,i);
z2(3,i) = 0;
% 由于arctan会吞掉一个π，故需手动补偿
% 任选一组解加上π即可
if (((-1)^ceil(i/4))==-1)
th4(i) = -atan([0 0 1]*cross(temp6(:,i),temp5(:,i))/(temp6(:,i)'*temp5(:,i)));
end
if (((-1)^ceil(i/4))==1)
th4(i) = pi-atan([0 0 1]*cross(temp6(:,i),temp5(:,i))/(temp6(:,i)'*temp5(:,i)));
end

e4(:,:,i) = [cos(th4(i)) -sin(th4(i)) 0 0;
      sin(th4(i)) cos(th4(i)) 0 0;
      0 0 1 0;
      0 0 0 1];
e5(:,:,i) = [cos(th5(i)) 0 sin(th5(i)) -(L1+L2+L3)*sin(th5(i));
      0 1 0 0;
      -sin(th5(i)) 0 cos(th5(i)) (L1+L2+L3)-(L1+L2+L3)*cos(th5(i));
      0 0 0 1];
e6(:,:,i) = (e1(:,:,i)*e2(:,:,i)*e3(:,:,i)*e4(:,:,i)*e5(:,:,i))^(-1)*e;

% 应用子问题1求th6 
e6p(:,i) = (e1(:,:,i)*e2(:,:,i)*e3(:,:,i)*e4(:,:,i)*e5(:,:,i))^(-1)*e*[10000;0;0;1];
e6p(3,i) = 0;
temp7(:,i) = e6p(1:3,i);
th6(i) = atan([0 0 1]*cross([10000;0;0],temp7(:,i))/([10000 0 0]*temp7(:,i)));
end

% 把th1~th6全部塞到一个矩阵里面
theta0 = [th1 th2 th3 th4 th5 th6];

% 把所有th超过-π~π范围的整到这个范围里面
% 此处默认所有th不超过-3π~3π的范围
for i=1:8
    for j=1:6
        if (real(theta0(i,j))>pi)
            theta0(i,j) = theta0(i,j)-2*pi;
        end
        if (real(theta0(i,j))<((-1)*pi))
            theta0(i,j) = theta0(i,j)+2*pi;
        end
    end
end
theta = theta0; 
end
